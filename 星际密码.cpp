题目：
牛客网

星际战争开展了100年之后，NowCoder终于破译了外星人的密码！他们的密码是一串整数，通过一张表里的信息映射成最终4位密码。表的规则是：n对应的值是矩阵X的n次方的左上角，如果这个数不足4位则用0填充，如果大于4位的则只输出最后4位。


例如n=2时，

|1 1|^2 => |1 1| * |1 1| => |2 1|
 其中左上角的数是2，对应的数是“0002”。

分析：
这里首先需要知道两个矩阵的相乘是如何计算的：

举例：
  A： 2   3  -1       B:   4    -5  
        6   1  -2            -3     0            
                                 1     2
计算结果：
        -2   -12
        19   -34
计算规则：
第一个矩阵的每一行的每个数字乘以第二个矩阵的每一列的每一个数字的最后和作为一个数字；
2*4 + 3*(-3) + 1*(-1)=-2;
2*(-5) + 3*0 + (-1)*2=-12;
6*4 + 1*(-3) + (-2)*1=19;
6*(-5) + 1*0 + (-2)*2=-34;
然后根据矩阵的计算结果推出：
当n的取值为： 1 2 3 4 5 6 ....
左上角的值为：1 2 3 5 8 13 ....
是一个变式的斐波那契数列。

实现代码如下：

#include <stdio.h>

int a[10005]={0,1,2,3,5};

void FibInit()
{
    for(int i=3;i<=10005;i++)
    {
        a[i]=a[i-1]+a[i-2];
        if(a[i]>=10000)//如果数字大于4位数，只输出最后4位
            a[i]%=10000;
    }
}

int main()
{
    int n,t;
    FibInit();
    while(scanf("%d",&n)!=EOF)
    {
        while(n--)
        {
            scanf("%d",&t);
            printf("%04d",a[t]);
        }
        printf("\n");
    }
    return 0;
}
