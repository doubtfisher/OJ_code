题目：
数根可以通过把一个数的各个位上的数字加起来得到。如果得到的数是一位数，那么这个数就是数根；如果结果是两位数或者包括更多位的数字，那么再把这些数字加起来。如此进行下去，直到得到是一位数为止。
比如，对于24 来说，把2 和4 相加得到6，由于6 是一位数，因此6 是24 的数根。
再比如39，把3 和9 加起来得到12，由于12 不是一位数，因此还得把1 和2 加起来，最后得到3，这是一个一位数，因此3 是39 的数根。现在给你一个正整数，输出它的数根。

分析：
这道题目本身不难，但是给定数n的范围为：正整数n（1≤n≤10E1000），这就使得输入可能会有点麻烦，所以在输入时，我们以字符串的形式进行输入，然后再转为数字进行运算。

具体实现代码如下：

#include <iostream>
#include <string>
using namespace std;

int main()
{
    string s;
    while(cin>>s)
    {
        int sum=0;
        for(int i=0;i<s.size();i++)
        {
            sum+=s[i]-'0';
        }
        while(sum>9)
        {
            int c=0;
            while(sum>0)
            {
                c+=sum%10;
                sum/=10;
            }
            sum=tmp;
        }
        cout<<sum<<endl;
    }
    return 0;
}