题目：
居然有假币！ 现在猪肉涨了，但是农民的工资却不见涨啊，没钱怎么买猪肉啊。nowcoder这就去买猪肉，结果找来的零钱中有假币！！！可惜nowcoder 一不小心把它混进了一堆真币里面去了。只知道假币的重量比真币的质量要轻，给你一个天平（天平两端能容纳无限个硬币），请用最快的时间把那个可恶的假币找出来。
输入描述:
1≤n≤2^30,输入0结束程序。
输出描述:
最多要称几次一定能把那个假币找出来？

分析：
对于 1个硬币，称量 0次
；
对于 2个硬币，称量 1次
对于 3个硬币，称量 1次

；
对于 4个硬币，称量 2次，先分成（2，2，0），第一次称量前两份（2，2），如果重量不一样，再次求出判断另外2个硬币需要称量的次数。


对于 5个硬币，称量 2次，先分成（2，2，1），第一次称量前两份（2，2），如果重量不一样，再次判断另外1个硬币需要称量的次数。


对于 6个硬币，称量 2次，先分成（2，2，2），第一次称量前两份（2，2），如果重量不一样，再次判断求出另外2个硬币需要称量的次数。


对于 7个硬币，称量 2次，先分成（3，3，1），第一次称量前两份（3，3），如果重量不一样，再次判断求出另外3个硬币需要称量的次数。


通过上面分析可以看出，对于要称量的硬币，每次称量前分成3份，要求前两份的个数不小于第三份。如果前两份重量是一样，那么假币在第三份中，这样就除去了2/3的硬币。
如果前两份重量不一样，那么假币在重量轻的一份中，这样也除去了2/3的硬币。

这样一来，称量一次除去了将近2/3的硬币，一直重复上面的分法，就可以很快求出称量次数。

实现代码如下：
#include <iostream>
using namespace std;

int main()
{
    int n;
    while(cin>>n)
    {
        int count=0;
        if(n==0)
            break;
        while(n>=2)
        {
            if(n%3==0)
            {
                n/=3;
            }
            else
            {
                n=n/3+1;
            }
            count++;
        }
        cout<<count<<endl;
    }
    return 0;
}
