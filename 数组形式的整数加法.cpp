题目：
对于非负整数?X?而言，X?的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果?X = 1231，那么其数组形式为?[1,2,3,1]。

给定非负整数 X 的数组形式?A，返回整数?X+K?的数组形式。

?

思路分析：
让我们逐位将数字加在一起。举一个例子，如果要计算 123 与 912 的和。我们顺次计算 3+2、2+1、1+9。任何时候，当加法的结果大于等于 10，我们要将进位的 11 加入下一位的计算中去，所以最终结果等于1035。




我们可以对以上的想法做一个小变化，让它实现起来更容易 ：
       将整个加数加入数组表示的数的最低位。

继续之前的例子 123+912  ，我们把它表示成 [1, 2, 3+912]。然后，我们计算 3+912 = 915。5 留在当前这一位，将 910/10=91以进位的形式加入下一位。

然后，再重复这个过程，计算 [1, 2+91, 5]我们得到 93，3 留在当前位，将 90/10=9 以进位的形式加入下一位。继而又得到 [1+9, 3, 5]，重复这个过程之后，最终得到结果[1,0,3,5]。



代码实现：

class Solution {
public:
    vector<int> addToArrayForm(vector<int>& A, int K) 
    {
        int size=A.size();
        int cur=K;
        int i = size-1;
        while (i >= 0) 
        {
            if (i >= 0)
                cur += A[i];
            
            A[i]=(cur % 10);
            cur /= 10;
            i--;
        }
         while(cur)//考虑k有可能是一个很大的数，所以要循环处理
         {
             A.insert(A.begin(),cur%10);
             cur/=10;
         }
        return A;
   }
        
};